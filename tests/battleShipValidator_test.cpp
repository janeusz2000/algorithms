#include "codeWars/battleShipValidator.hpp"
#include "gtest/gtest.h"

#include <vector>

TEST(BattleShipTest, MyTest) {

  std::vector<std::vector<int>> wrongNumberOfShips = {
      {1, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {1, 0, 1, 0, 0, 0, 0, 0, 0, 0},
      {1, 0, 1, 0, 1, 1, 1, 0, 0, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 1, 1, 1, 0, 0, 0},
      {0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
  /*
  wrongNumberOfShips:
  □ _ _ _ _ □ □ _ _ _
  □ _ □ _ _ _ _ _ _ _
  □ _ □ _ □ □ □ _ _ _
  □ _ _ _ _ _ _ _ _ _
  _ _ _ _ _ _ _ _ □ _
  _ _ _ _ □ □ □ _ _ _
  _ _ _ _ _ _ _ _ □ _
  _ _ _ □ _ _ _ _ _ _
  _ _ _ _ _ _ _ _ _ _
  */
  ASSERT_FALSE(validate_battlefield(wrongNumberOfShips));

  std::vector<std::vector<int>> wrongShape = {
      {1, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {1, 0, 1, 0, 0, 0, 0, 0, 1, 0},
      {1, 0, 1, 0, 1, 1, 1, 0, 1, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 1, 1, 0, 0, 0, 0},
      {0, 0, 0, 0, 0, 1, 0, 0, 1, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
  /*
  wrongShape:
  □ _ _ _ _ □ □ _ _ _
  □ _ □ _ _ _ _ _ □ _
  □ _ □ _ □ □ □ _ □ _
  □ _ _ _ _ _ _ _ _ _
  _ _ _ _ _ _ _ _ □ _
  _ _ _ _ □ □ _ _ _ _
  _ _ _ _ _ □ _ _ □ _
  _ _ _ □ _ _ _ _ _ _
  _ _ _ _ _ _ _ □ _ _
  _ _ _ _ _ _ _ _ _ _
  */
  ASSERT_FALSE(validate_battlefield(wrongShape));

  std::vector<std::vector<int>> wrongSpacing = {
      {1, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {1, 0, 1, 0, 0, 0, 0, 0, 1, 0},
      {1, 0, 1, 1, 1, 1, 0, 0, 1, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 1, 1, 1, 0, 0, 0},
      {0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
  /*
 wrongSpacing:
 □ _ _ _ _ □ □ _ _ _
 □ _ □ _ _ _ _ _ □ _
 □ _ □ □ □ □ _ _ □ _
 □ _ _ _ _ _ _ _ _ _
 _ _ _ _ _ _ _ _ □ _
 _ _ _ _ □ □ □ _ _ _
 _ _ _ _ _ _ _ _ □ _
 _ _ _ □ _ _ _ _ _ _
 _ _ _ _ _ _ _ _ _ _
 */
  ASSERT_FALSE(validate_battlefield(wrongSpacing));

  std::vector<std::vector<int>> wrongAxis = {
      {1, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {1, 0, 1, 0, 0, 0, 0, 0, 1, 0},
      {1, 0, 1, 0, 1, 1, 1, 0, 1, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
      {0, 0, 0, 0, 1, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 0, 1, 1, 0, 0, 0},
      {0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};

  /*
wrong Axis:
□ _ _ _ _ □ □ _ _ _
□ _ □ _ _ _ _ _ □ _
□ _ □ _ □ □ □ _ □ _
□ _ _ _ _ _ _ _ _ _
_ _ _ _ □ _ _ _ □ _
_ _ _ _ _ □ □ _ _ _
_ _ _ _ _ _ _ _ □ _
_ _ _ □ _ _ _ _ _ _
_ _ _ _ _ _ _ _ _ _
*/
  ASSERT_FALSE(validate_battlefield(wrongAxis));
}

TEST(BattleShipTest, CodeWarsTest) {
  std::vector<std::vector<int>> validSolution = {
      {1, 0, 0, 0, 0, 1, 1, 0, 0, 0}, {1, 0, 1, 0, 0, 0, 0, 0, 1, 0},
      {1, 0, 1, 0, 1, 1, 1, 0, 1, 0}, {1, 0, 0, 0, 0, 0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 0, 1, 1, 1, 0, 0, 0},
      {0, 0, 0, 0, 0, 0, 0, 0, 1, 0}, {0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
      {0, 0, 0, 0, 0, 0, 0, 1, 0, 0}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};
  /*
validSolution:
□ _ _ _ _ □ □ _ _ _
□ _ □ _ _ _ _ _ □ _
□ _ □ _ □ □ □ _ □ _
□ _ _ _ _ _ _ _ _ _
_ _ _ _ _ _ _ _ □ _
_ _ _ _ □ □ □ _ _ _
_ _ _ _ _ _ _ _ □ _
_ _ _ □ _ _ _ _ _ _
_ _ _ _ _ _ _ _ _ _
*/
  ASSERT_TRUE(validate_battlefield(validSolution));
};